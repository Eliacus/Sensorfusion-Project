%% Q2
% Get the data from the phone:
%   [xhat, meas] = filterTemplate(); % save data
%%
clear; clc; close all;

%Load data:
load('Q2_data.mat') 

% Clear all NaN values
acc = meas.acc(:,~any(isnan(meas.acc),1));
gyr = meas.gyr(:,~any(isnan(meas.gyr),1));
mag = meas.mag(:,~any(isnan(meas.mag),1));

t_acc = meas.t(:,~any(isnan(meas.acc),1));
t_gyr = meas.t(:,~any(isnan(meas.gyr),1));
t_mag = meas.t(:,~any(isnan(meas.mag),1));

% -- 3. Calculate means and covariances --

% Accelerometer
mean_acc = mean(acc,2);
cov_acc = cov(acc');

% Gyroscope
mean_gyr = mean(gyr,2);
cov_gyr = cov(gyr');

% Magnetometer
mean_mag = mean(mag,2);
cov_mag = cov(mag');


% -- 2. Plot of the signals over time -- 

figure(1); hold on
% Accelerometer plot
subplot(3,1,1)
plot(t_acc,acc(1,:))
xlim([0 t_acc(end)])
xlabel('Time [s]','Interpreter','latex')
ylabel('Acceleration [m/s^2]','Interpreter','latex')

% Gyro plot
subplot(3,1,2)
plot(t_gyr,gyr(1,:))
xlim([0 t_gyr(end)])
xlabel('Time [s]','Interpreter','latex')
ylabel('Angular velocity [$rad/s$]','Interpreter','t

% Magnetometer plot
subplot(3,1,3)
plot(t_mag,mag(1,:))
xlim([0 t_mag(end)])
xlabel('Time [s]','Interpreter','latex')



















